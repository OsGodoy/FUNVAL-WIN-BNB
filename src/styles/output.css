/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .fixed {
    position: fixed;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .z-50 {
    z-index: 50;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-15 {
    height: calc(var(--spacing) * 15);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-25 {
    height: calc(var(--spacing) * 25);
  }
  .h-30 {
    height: calc(var(--spacing) * 30);
  }
  .h-35 {
    height: calc(var(--spacing) * 35);
  }
  .h-50 {
    height: calc(var(--spacing) * 50);
  }
  .h-60 {
    height: calc(var(--spacing) * 60);
  }
  .h-78 {
    height: calc(var(--spacing) * 78);
  }
  .h-100 {
    height: calc(var(--spacing) * 100);
  }
  .h-101 {
    height: calc(var(--spacing) * 101);
  }
  .h-102 {
    height: calc(var(--spacing) * 102);
  }
  .h-115 {
    height: calc(var(--spacing) * 115);
  }
  .h-180 {
    height: calc(var(--spacing) * 180);
  }
  .h-\[32\%\] {
    height: 32%;
  }
  .h-\[50\%\] {
    height: 50%;
  }
  .h-\[55\%\] {
    height: 55%;
  }
  .h-\[65\%\] {
    height: 65%;
  }
  .h-\[80\%\] {
    height: 80%;
  }
  .h-\[90\%\] {
    height: 90%;
  }
  .h-\[100\%\] {
    height: 100%;
  }
  .h-\[100\] {
    height: 100;
  }
  .h-full {
    height: 100%;
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-25 {
    width: calc(var(--spacing) * 25);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-82 {
    width: calc(var(--spacing) * 82);
  }
  .w-85 {
    width: calc(var(--spacing) * 85);
  }
  .w-90 {
    width: calc(var(--spacing) * 90);
  }
  .w-150 {
    width: calc(var(--spacing) * 150);
  }
  .w-\[\%\] {
    width: %;
  }
  .w-\[0\%\] {
    width: 0%;
  }
  .w-\[1\%\] {
    width: 1%;
  }
  .w-\[5\%\] {
    width: 5%;
  }
  .w-\[8\%\] {
    width: 8%;
  }
  .w-\[10\%\] {
    width: 10%;
  }
  .w-\[12\%\] {
    width: 12%;
  }
  .w-\[15\%\] {
    width: 15%;
  }
  .w-\[17\%\] {
    width: 17%;
  }
  .w-\[18\%\] {
    width: 18%;
  }
  .w-\[20\%\] {
    width: 20%;
  }
  .w-\[28\%\] {
    width: 28%;
  }
  .w-\[30\%\] {
    width: 30%;
  }
  .w-\[32\%\] {
    width: 32%;
  }
  .w-\[35\%\] {
    width: 35%;
  }
  .w-\[40\%\] {
    width: 40%;
  }
  .w-\[42\%\] {
    width: 42%;
  }
  .w-\[44\%\] {
    width: 44%;
  }
  .w-\[45\%\] {
    width: 45%;
  }
  .w-\[48\%\] {
    width: 48%;
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[55\%\] {
    width: 55%;
  }
  .w-\[70\%\] {
    width: 70%;
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[82\%\] {
    width: 82%;
  }
  .w-\[85\%\] {
    width: 85%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[95\%\] {
    width: 95%;
  }
  .w-\[98\%\] {
    width: 98%;
  }
  .w-full {
    width: 100%;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * -0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .place-content-center {
    place-content: center;
  }
  .place-content-start {
    place-content: start;
  }
  .place-items-center {
    place-items: center;
  }
  .content-start {
    align-content: flex-start;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .justify-self-start {
    justify-self: flex-start;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-2xl {
    border-top-left-radius: var(--radius-2xl);
    border-top-right-radius: var(--radius-2xl);
  }
  .rounded-l-2xl {
    border-top-left-radius: var(--radius-2xl);
    border-bottom-left-radius: var(--radius-2xl);
  }
  .rounded-l-xl {
    border-top-left-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
  }
  .rounded-r-2xl {
    border-top-right-radius: var(--radius-2xl);
    border-bottom-right-radius: var(--radius-2xl);
  }
  .rounded-r-xl {
    border-top-right-radius: var(--radius-xl);
    border-bottom-right-radius: var(--radius-xl);
  }
  .rounded-b-2xl {
    border-bottom-right-radius: var(--radius-2xl);
    border-bottom-left-radius: var(--radius-2xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-gray-800 {
    border-color: var(--color-gray-800);
  }
  .border-red-400 {
    border-color: var(--color-red-400);
  }
  .border-red-800 {
    border-color: var(--color-red-800);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-red-400 {
    background-color: var(--color-red-400);
  }
  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }
  .bg-slate-900\/50 {
    background-color: color-mix(in srgb, oklch(20.8% 0.042 265.755) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-slate-900) 50%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-red-400 {
    fill: var(--color-red-400);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-18 {
    padding-block: calc(var(--spacing) * 18);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[1px\] {
    font-size: 1px;
  }
  .text-\[8px\] {
    font-size: 8px;
  }
  .text-\[9px\] {
    font-size: 9px;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[11px\] {
    font-size: 11px;
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[15px\] {
    font-size: 15px;
  }
  .text-\[20px\] {
    font-size: 20px;
  }
  .text-\[30px\] {
    font-size: 30px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .text-\[10\] {
    color: 10;
  }
  .text-\[12\] {
    color: 12;
  }
  .text-\[15\] {
    color: 15;
  }
  .text-\[20\] {
    color: 20;
  }
  .text-\[md\] {
    color: md;
  }
  .text-\[xs\] {
    color: xs;
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .opacity-1000 {
    opacity: 1000%;
  }
  .shadow-\[0_0_8px_rgba\(0\,0\,0\,0\.12\)\] {
    --tw-shadow: 0 0 8px var(--tw-shadow-color, rgba(0,0,0,0.12));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-100 {
    transition-delay: 100ms;
  }
  .delay-300 {
    transition-delay: 300ms;
  }
  .duration-5 {
    --tw-duration: 5ms;
    transition-duration: 5ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-600 {
    --tw-duration: 600ms;
    transition-duration: 600ms;
  }
  .duration-800 {
    --tw-duration: 800ms;
    transition-duration: 800ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .group-group-hover\:animate-\[spin_0\.6s_linear_infinite\] {
    &:is(:where(.group):is(:where(.group):hover *) *) {
      @media (hover: hover) {
        animation: spin 0.6s linear infinite;
      }
    }
  }
  .group-hover\:size-4 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
      }
    }
  }
  .group-hover\:animate-\[bounce_1\.5s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: bounce 1.5s linear;
      }
    }
  }
  .group-hover\:animate-\[bounce_1s_ease-in-out_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: bounce 1s ease-in-out infinite;
      }
    }
  }
  .group-hover\:animate-\[bounce_1s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: bounce 1s linear;
      }
    }
  }
  .group-hover\:animate-\[bounce_1s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: bounce 1s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[ping_0\.5s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: ping 0.5s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[ping_1s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: ping 1s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[ping_1¿s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: ping 1¿s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[pulse_0\.5s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: pulse 0.5s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[pulse_0\.5s_ease-in-out_infini\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: pulse 0.5s ease-in-out infini;
      }
    }
  }
  .group-hover\:animate-\[pulse_0\.5s_ease-in-out_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: pulse 0.5s ease-in-out infinite;
      }
    }
  }
  .group-hover\:animate-\[pulse_1s_ease-in-out_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: pulse 1s ease-in-out infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.3s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.3s linear;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.6s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.6s linear;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.6s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.6s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.7s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.7s linear;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.8s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.8s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.8s_ease-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.8s ease-out;
      }
    }
  }
  .group-hover\:animate-\[spin_0\.8s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0.8s linear;
      }
    }
  }
  .group-hover\:animate-\[spin_0s_ease-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 0s ease-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1\.2s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1.2s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1\.5s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1.5s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1\.6s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1.6s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1\.s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1.s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1s_ease-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1s ease-out;
      }
    }
  }
  .group-hover\:animate-\[spin_1s_ease\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1s ease;
      }
    }
  }
  .group-hover\:animate-\[spin_1s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1s linear;
      }
    }
  }
  .group-hover\:animate-\[spin_1s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 1s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_2\.5s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2.5s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_2\.5s_linear__infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2.5s linear  infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_2\.5s_linear_ease-\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2.5s linear ease-;
      }
    }
  }
  .group-hover\:animate-\[spin_2\.5s_linear_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2.5s linear ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_2\.5s_linear_ease\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2.5s linear ease;
      }
    }
  }
  .group-hover\:animate-\[spin_2\.5s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2.5s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_2s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_2s_linear\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2s linear;
      }
    }
  }
  .group-hover\:animate-\[spin_2s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 2s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_3s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 3s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_4s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 4s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_5s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 5s linear infinite;
      }
    }
  }
  .group-hover\:animate-\[spin_13s_ease-in-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin 13s ease-in-out;
      }
    }
  }
  .group-hover\:animate-\[spin_s_ease-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin s ease-out;
      }
    }
  }
  .group-hover\:animate-\[spin_s_linear_infinite\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: spin s linear infinite;
      }
    }
  }
  .group-hover\:animate-spin {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: var(--animate-spin);
      }
    }
  }
  .hover\:scale-102 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 102%;
        --tw-scale-y: 102%;
        --tw-scale-z: 102%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:animate-ping {
    &:hover {
      @media (hover: hover) {
        animation: var(--animate-ping);
      }
    }
  }
  .hover\:animate-pulse {
    &:hover {
      @media (hover: hover) {
        animation: var(--animate-pulse);
      }
    }
  }
  .hover\:animate-spin {
    &:hover {
      @media (hover: hover) {
        animation: var(--animate-spin);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:h-20 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 20);
    }
  }
  .sm\:h-55 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 55);
    }
  }
  .sm\:w-160 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 160);
    }
  }
  .sm\:w-162 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 162);
    }
  }
  .sm\:w-165 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 165);
    }
  }
  .sm\:w-170 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 170);
    }
  }
  .sm\:w-200 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 200);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:justify-between {
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .sm\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-\[10px\] {
    @media (width >= 40rem) {
      font-size: 10px;
    }
  }
  .lg\:h-60 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 60);
    }
  }
  .lg\:w-250 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 250);
    }
  }
  .lg\:w-\[30\%\] {
    @media (width >= 64rem) {
      width: 30%;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .xl\:h-150 {
    @media (width >= 80rem) {
      height: calc(var(--spacing) * 150);
    }
  }
  .xl\:h-200 {
    @media (width >= 80rem) {
      height: calc(var(--spacing) * 200);
    }
  }
  .xl\:items-start {
    @media (width >= 80rem) {
      align-items: flex-start;
    }
  }
  .xl\:justify-center {
    @media (width >= 80rem) {
      justify-content: center;
    }
  }
  .xl\:justify-start {
    @media (width >= 80rem) {
      justify-content: flex-start;
    }
  }
  .xl\:py-0 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .xl\:py-20 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
